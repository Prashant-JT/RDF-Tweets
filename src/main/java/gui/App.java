package gui;

import backend.FileReader;
import backend.RDFModel;
import backend.TwitterConnection;
import java.io.FileWriter;
import java.io.IOException;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import twitter4j.TwitterException;

/**
 *
 * @author prash
 */
public class App extends javax.swing.JFrame {
    
    JFileChooser fc = new JFileChooser();
    FileNameExtensionFilter filter = new FileNameExtensionFilter("Text file", "txt");
    
    /**
     * Creates new form App
     */
    public App() {
        initComponents();
        fc.setAcceptAllFileFilterUsed(false);
        fc.addChoosableFileFilter(filter);
        buttonGroup.add(turtleFormat);
        buttonGroup.add(XMLFormat);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup = new javax.swing.ButtonGroup();
        termLabel = new javax.swing.JLabel();
        term = new javax.swing.JTextField();
        themeLabel = new javax.swing.JLabel();
        theme = new javax.swing.JTextField();
        numTweetsLabel = new javax.swing.JLabel();
        tweetsSpinner = new javax.swing.JSpinner();
        formatLabel = new javax.swing.JLabel();
        turtleFormat = new javax.swing.JRadioButton();
        XMLFormat = new javax.swing.JRadioButton();
        search = new javax.swing.JButton();
        menu = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        keysMenu = new javax.swing.JMenuItem();
        saveMenu = new javax.swing.JMenuItem();
        separatorMenu1 = new javax.swing.JPopupMenu.Separator();
        exitMenu = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        docsMenu = new javax.swing.JMenuItem();
        separatorMenu2 = new javax.swing.JPopupMenu.Separator();
        authorMenu = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("RDF Tweet");

        termLabel.setText("Term to search");

        term.setToolTipText("Write term");
        term.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                termActionPerformed(evt);
            }
        });

        themeLabel.setText("Theme to search");

        theme.setToolTipText("Write theme");
        theme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                themeActionPerformed(evt);
            }
        });

        numTweetsLabel.setText("Number of tweets");

        tweetsSpinner.setToolTipText("Number of tweets");

        formatLabel.setText("Format");

        turtleFormat.setSelected(true);
        turtleFormat.setText("Turtle");
        turtleFormat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                turtleFormatActionPerformed(evt);
            }
        });

        XMLFormat.setText("XML");

        search.setText("Search");
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });

        fileMenu.setText("File");

        keysMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_K, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        keysMenu.setText("Import Keys");
        keysMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                keysMenuActionPerformed(evt);
            }
        });
        fileMenu.add(keysMenu);

        saveMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        saveMenu.setText("Save");
        saveMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveMenuActionPerformed(evt);
            }
        });
        fileMenu.add(saveMenu);
        fileMenu.add(separatorMenu1);

        exitMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        exitMenu.setText("Exit");
        exitMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenu);

        menu.add(fileMenu);

        helpMenu.setText("Help");

        docsMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        docsMenu.setText("Documentation");
        docsMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                docsMenuActionPerformed(evt);
            }
        });
        helpMenu.add(docsMenu);
        helpMenu.add(separatorMenu2);

        authorMenu.setText("Author");
        authorMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                authorMenuActionPerformed(evt);
            }
        });
        helpMenu.add(authorMenu);

        menu.add(helpMenu);

        setJMenuBar(menu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(termLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(themeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(formatLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(numTweetsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(tweetsSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(theme, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE)
                        .addComponent(term, javax.swing.GroupLayout.Alignment.LEADING))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(search)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(turtleFormat)
                            .addGap(18, 18, 18)
                            .addComponent(XMLFormat))))
                .addContainerGap(60, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(termLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(term, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(themeLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(theme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tweetsSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(numTweetsLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(formatLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(turtleFormat)
                    .addComponent(XMLFormat))
                .addGap(30, 30, 30)
                .addComponent(search)
                .addGap(30, 30, 30))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saveMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveMenuActionPerformed
        int result = fc.showSaveDialog(this);
                
        if(result == JFileChooser.APPROVE_OPTION) {
            String fileName = fc.getSelectedFile().getAbsolutePath();
            
            FileWriter writer;
            try {
                if(turtleFormat.isSelected()) {
                    writer = new FileWriter(fileName + ".ttl");
                    // RDFModel.write(writer, model, RDFFormat.TURTLE_BLOCKS);
                    writer.close();
                }else{
                    writer = new FileWriter(fileName + ".rdf");
                    // RDFModel.write(writer, model, RDFFormat.RDFXML);
                    writer.close();
                }
                JOptionPane.showMessageDialog(this, "File saved", "Your file has been saved!", JOptionPane.INFORMATION_MESSAGE);
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, "Error", "File could not be saved", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_saveMenuActionPerformed

    private void exitMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuActionPerformed
        int res = JOptionPane.showConfirmDialog(rootPane, "Are you sure you want to exit?", 
                "Exit", JOptionPane.YES_NO_OPTION);
        
        if(res == JOptionPane.YES_OPTION) {
            this.dispose();
        }
    }//GEN-LAST:event_exitMenuActionPerformed

    private void termActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_termActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_termActionPerformed

    private void keysMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_keysMenuActionPerformed
        int res = fc.showOpenDialog(null);
        
        if(res == JFileChooser.APPROVE_OPTION) {
            FileReader reader = new FileReader(fc.getSelectedFile().getAbsolutePath());
            try {
                TwitterConnection connection = new TwitterConnection((HashMap<String, String>) reader.getKeys());
                boolean established = connection.createConnection();
                if(established) {
                    JOptionPane.showMessageDialog(this, "Connection has been established!", 
                            "Connection established", JOptionPane.INFORMATION_MESSAGE);
                }else{
                    JOptionPane.showMessageDialog(this, "Connection failed!", 
                            "Error to connect", JOptionPane.ERROR_MESSAGE);
                }
            } catch (TwitterException ex) {
                Logger.getLogger(App.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_keysMenuActionPerformed

    private void themeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_themeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_themeActionPerformed

    private void docsMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_docsMenuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_docsMenuActionPerformed

    private void authorMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_authorMenuActionPerformed
        JOptionPane.showMessageDialog(rootPane, "Prashant Jeswani Tejwani", "Author", WIDTH);
    }//GEN-LAST:event_authorMenuActionPerformed

    private void turtleFormatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_turtleFormatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_turtleFormatActionPerformed

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        if (term.getText().trim().isEmpty() || theme.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "All fields must be filled", "Incomplete fields", 
                    JOptionPane.WARNING_MESSAGE);
        } else {
            // search tweets
            //RDFModel models = new RDFModel(term.getText(), theme.getText());
            return;
        }
    }//GEN-LAST:event_searchActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        App mainFrame = new App();
        mainFrame.setLocationRelativeTo(null);
        mainFrame.setVisible(true);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton XMLFormat;
    private javax.swing.JMenuItem authorMenu;
    private javax.swing.ButtonGroup buttonGroup;
    private javax.swing.JMenuItem docsMenu;
    private javax.swing.JMenuItem exitMenu;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JLabel formatLabel;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JMenuItem keysMenu;
    private javax.swing.JMenuBar menu;
    private javax.swing.JLabel numTweetsLabel;
    private javax.swing.JMenuItem saveMenu;
    private javax.swing.JButton search;
    private javax.swing.JPopupMenu.Separator separatorMenu1;
    private javax.swing.JPopupMenu.Separator separatorMenu2;
    private javax.swing.JTextField term;
    private javax.swing.JLabel termLabel;
    private javax.swing.JTextField theme;
    private javax.swing.JLabel themeLabel;
    private javax.swing.JRadioButton turtleFormat;
    private javax.swing.JSpinner tweetsSpinner;
    // End of variables declaration//GEN-END:variables
}
